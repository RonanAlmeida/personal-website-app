{"version":3,"sources":["Components/IconOutline.js","OuterComponents/GooeyReact.js","Pages/MainPage.js","Components/Footer.js","Components/CustomDotGroup.js","App.js","serviceWorker.js","index.js"],"names":["IconOutline","props","useState","setHover","Popup","trigger","target","href","Header","as","style","margin","backgroundColor","textAlign","icon","Icon","inverted","color","name","size","onMouseEnter","onMouseLeave","content","position","GooeyReact","intensity","animation","marginTop","width","height","cx","cy","fill","r","MainPage","h1","fontSize","background","h2","marginLeft","marginRight","h2Custom","subheader","sub","Divider","horizontal","Footer","bottom","marginBottom","CustomDotGroup","slides","Container","Button","Group","Array","keys","map","slide","Dot","key","defaultProps","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cef9053b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Header, Icon, Popup } from \"semantic-ui-react\";\r\n\r\nfunction IconOutline(props) {\r\n  //React hooks for hover css options\r\n  const [inHover, setHover] = useState(false);\r\n\r\n  const style = {\r\n    icon: {\r\n      margin: \"3rem\",\r\n      backgroundColor: \"#fff\",\r\n      textAlign: \"center\",\r\n    },\r\n    iconHover: {\r\n      margin: \"3rem\",\r\n      backgroundColor: \"#fff\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Popup\r\n     \r\n      trigger={\r\n        <a target=\"_blank\" href={props.href}>\r\n          <Header as=\"h5\" style={style.icon} icon>\r\n            <Icon\r\n            \r\n              inverted\r\n              color=\"black\"\r\n              name={props.name}\r\n              size=\"huge\"\r\n              onMouseEnter={() => setHover(true)}\r\n              onMouseLeave={() => setHover(false)}\r\n            />\r\n          </Header>\r\n        </a>\r\n      }\r\n      content={props.content}\r\n      position=\"bottom center\"\r\n      inverted\r\n    />\r\n  );\r\n}\r\nexport default IconOutline;\r\n","import React from \"react\";\r\nimport Goo from \"gooey-react\";\r\n\r\nfunction GooeyReact() {\r\n  return (\r\n    <div intensity=\"weak\">\r\n      <Goo\r\n        style={{\r\n          animation: \"floating  8s linear infinite\",\r\n          marginTop: \"5em\",\r\n          textAlign: \"center\",\r\n        }}\r\n      >\r\n        <svg width=\"192\" height=\"192\">\r\n          <circle cx=\"37%\" cy=\"37%\" fill=\"mediumspringgreen\" r=\"46\" />\r\n          <circle cx=\"63%\" cy=\"63%\" fill=\"lightseagreen\" r=\"40\" />\r\n          <circle cx=\"23%\" cy=\"83%\" fill=\"mediumaquamarine\" r=\"20\" />\r\n        </svg>\r\n      </Goo>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GooeyReact;\r\n","import React from \"react\";\r\nimport {\r\n  Popup,\r\n  Rating,\r\n  Card,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  Divider,\r\n  Container,\r\n  Segment,\r\n  Grid,\r\n  Button,\r\n} from \"semantic-ui-react\";\r\nimport IconOutline from \"../Components/IconOutline\";\r\nimport GooeyReact from \"../OuterComponents/GooeyReact\";\r\n\r\nfunction MainPage() {\r\n  const style = {\r\n    h1: {\r\n      fontSize: \"3em\",\r\n    },\r\n    background: {\r\n      backgroundColor: \"#FFF2\",\r\n    },\r\n    icon: {\r\n      margin: \"1rem\",\r\n    },\r\n    h2: {\r\n      fontSize: \"1.5rem\",\r\n      marginLeft: \"1rem\",\r\n      marginRight: \"1rem\",\r\n    },\r\n    h2Custom: {\r\n      fontSize: \"1.5rem\",\r\n      marginLeft: \"1rem\",\r\n      marginRight: \"1rem\",\r\n      marginTop: \"5.3em\",\r\n    },\r\n  };\r\n  return (\r\n    <div>\r\n      <GooeyReact style={style.h1} />\r\n      <Header\r\n        as=\"h1\"\r\n        content=\"Ronan Almeida\"\r\n        subheader=\"Welcome to my personal website 👋🏾\"\r\n        style={style.h1}\r\n        textAlign=\"center\"\r\n        size=\"huge\"\r\n      />\r\n      <Header textAlign=\"center\" sub>\r\n        Software Engineer\r\n      </Header>\r\n      <Header\r\n        as=\"h1\"\r\n        style={style.h2}\r\n        subheader=\"Passionate about combing impactful software and algorithmic thinking to deliver effective user solutions\"\r\n        textAlign=\"center\"\r\n      />\r\n\r\n\r\n    <Header textAlign=\"center\" >\r\n    <IconOutline\r\n        name=\"file alternate\"\r\n        content=\"Resume\"\r\n        href=\"https://drive.google.com/file/d/1Wjk8jy3bsXGBi9BfjVe4Up_F1gmYFcGf/view\"\r\n      />\r\n\r\n      <IconOutline\r\n        name=\"linkedin\"\r\n        content=\"LinkedIn\"\r\n        href=\"https://www.linkedin.com/in/ronanalmeida/\"\r\n      />\r\n      <IconOutline\r\n        name=\"github\"\r\n        content=\"Github\"\r\n        href=\"https://github.com/RonanAlmeida\"\r\n      />\r\n      <IconOutline\r\n        name=\"mail\"\r\n        content=\"Email\"\r\n        href=\"mailto: ronan.almeida@queensu.ca\"\r\n      />\r\n      </Header>\r\n\r\n\r\n      <Divider horizontal>\r\n        <Header as=\"h1\">\r\n          <Icon name=\"angle down\" inverted color=\"black\"></Icon>\r\n        </Header>\r\n      </Divider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\n\r\nfunction Footer() {\r\n  const Item = {\r\n    // position: \"fixed\",\r\n    bottom: \"0\",\r\n    textAlign: 'center',\r\n    marginTop:'10em',\r\n    marginBottom:'1em'\r\n\r\n  };\r\n  return <div style={Item}>Designed and Developed by Ronan Almeida © </div>;\r\n}\r\nexport default Footer;\r\n","import PropTypes from \"prop-types\";\r\nimport { Dot } from \"pure-react-carousel\";\r\nimport React from \"react\";\r\nimport { Button, Container } from \"semantic-ui-react\";\r\n\r\nconst CustomDotGroup = ({ slides, size }) => (\r\n  <Container textAlign=\"center\">\r\n    <Button.Group size={size}>\r\n      {[...Array(slides).keys()].map((slide) => (\r\n        <Button as={Dot} key={slide} icon=\"circle\" slide={slide} />\r\n      ))}\r\n    </Button.Group>\r\n  </Container>\r\n);\r\n\r\nCustomDotGroup.defaultProps = {\r\n  size: \"mini\",\r\n};\r\n\r\nCustomDotGroup.propTypes = {\r\n  slides: PropTypes.number.isRequired,\r\n  size: PropTypes.string,\r\n};\r\n\r\nexport default CustomDotGroup;\r\n","import React from \"react\";\nimport MainPage from \"./Pages/MainPage\";\nimport Footer from \"./Components/Footer\";\nimport \"./App.css\";\nimport Projects from \"./Pages/Projects\";\nimport \"pure-react-carousel/dist/react-carousel.es.css\";\n\n// import HomepageLayout from './Components/HomepageLayout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainPage />\n      {/* <Projects /> */}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n    <App />\n,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}